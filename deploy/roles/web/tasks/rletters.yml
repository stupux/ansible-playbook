---
# Copy and deploy the application code

- name: Install code dependencies
  yum: name={{ item }} state=latest
  with_items:
    - npm
    - nodejs
    - git
  tags: rletters

- name: Install yarn via NPM
  npm: name=yarn global=yes state=latest
  tags: rletters

- name: Create RLetters directory
  file: path=/opt/rletters state=directory
  tags: rletters

- name: Create RLetters state directory
  file: path=/opt/rletters/state state=directory
  tags: rletters

- name: Create root's SSH configuration directory
  file: path=~/.ssh state=directory
  tags: rletters

- name: Add GitHub key to SSH known hosts
  lineinfile: dest=~/.ssh/known_hosts regexp=^github.com line="github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" state=present create=yes
  tags: rletters

- name: Check out RLetters via git
  git: repo=git://github.com/rletters/rletters.git dest=/opt/rletters/root force=yes
  tags: rletters

- name: Create bundle directory
  file: path=/opt/rletters/state/bundle state=directory
  tags: rletters

- name: Symlink bundle directory
  file: src=/opt/rletters/state/bundle path=/opt/rletters/root/vendor/bundle state=link
  tags: rletters

- name: Install bundle to vendor/bundle
  command: chdir=/opt/rletters/root/ bundle install --deployment --without development:test --path vendor/bundle
  tags: rletters

- name: Copy example environment file
  copy: src=/opt/rletters/root/.env.example dest=/opt/rletters/root/.env remote_src=yes force=no
  tags: rletters

- name: See if secret keys are present
  shell: "grep '^# SECRET_TOKEN=asdf$' /opt/rletters/root/.env"
  register: env_secret_key
  failed_when: "env_secret_key.rc == 2"
  tags: rletters

- name: Generate secret keys
  command: chdir=/opt/rletters/root/ bundle exec rails secrets:regen
  when: "env_secret_key.stdout.find('# SECRET_TOKEN=') != -1"
  tags: rletters

- name: Silence the verbose logs for production
  lineinfile: dest=/opt/rletters/root/.env regexp="^VERBOSE_LOGS=" line="VERBOSE_LOGS=false"
  tags: rletters

- name: Update database URL in environment file (local)
  lineinfile: dest=/opt/rletters/root/.env regexp="^DATABASE_URL=(.*)$" line="DATABASE_URL=\"postgres://rletters_postgresql:{{ db_pass }}@127.0.0.1/rletters_production\""
  when: inventory_hostname == groups['dbserver'][0]
  tags: rletters

- name: Update database URL in environment file (external)
  lineinfile: dest=/opt/rletters/root/.env regexp="^DATABASE_URL=(.*)$" line="DATABASE_URL=\"postgres://rletters_postgresql:{{ db_pass }}@{{ hostvars[groups['dbserver'][0]]['ansible_eth0']['ipv4']['address'] }}/rletters_production\""
  when: inventory_hostname != groups['dbserver'][0]
  tags: rletters

- name: Update Solr URL in environment file (local)
  lineinfile: dest=/opt/rletters/root/.env regexp="^SOLR_URL=(.*)$" line="SOLR_URL=\"http://localhost:8080/solr/\""
  when: inventory_hostname == groups['solrserver'][0]
  tags: rletters

- name: Update Solr URL in environment file (external)
  lineinfile: dest=/opt/rletters/root/.env regexp="^SOLR_URL=(.*)$" line="SOLR_URL=\"http://{{ hostvars[groups['solrserver'][0]]['ansible_eth0']['ipv4']['address'] }}:8080/solr/\""
  when: inventory_hostname != groups['solrserver'][0]
  tags: rletters

- name: Create the sockets directory
  file: path=/opt/rletters/root/tmp/sockets state=directory
  tags: rletters

# This shouldn't cause damage, but we don't put the rletters tag on it, just to
# be safe.
- name: Migrate the database
  shell: chdir=/opt/rletters/root/ bundle exec rails db:migrate RAILS_ENV=production
  register: migrate_result
  changed_when: migrate_result.stdout != ''
  tags: rletters_migrate

# This should only seed the database once, but just to be safe, we don't put
# the rletters tag on this.
- name: Seed the database
  shell: chdir=/opt/rletters/root/ creates=/opt/rletters/state/database_seeded bundle exec rails db:seed RAILS_ENV=production && touch /opt/rletters/state/database_seeded
  tags: rletters_seed

- name: Install the Yarn packages
  shell: chdir=/opt/rletters/root/ bundle exec rails yarn:install
  tags: rletters

- name: Precompile the assets
  shell: chdir=/opt/rletters/root/ bundle exec rails assets:precompile RAILS_ENV=production
  tags: rletters

- name: Set the ownership for the RLetters directory
  file: path=/opt/rletters owner=rletters_deploy group=rletters_deploy state=directory recurse=yes
  tags: rletters
